<%= render "shared/main_header" %>

<div class="main-container">
    <div class="body-top-wrapper">
        <% if user_signed_in? %>
          <div class="login_user_name">ログイン中 <%= current_user.first_name  %></div>
        <% else %>
          <div class="login_user_name">ログインしていません</div>
        <% end %>
        <% if user_signed_in? && current_user.admin_true == true %>
            <button class="add-schedule-btn">
                +スケジュールを追加
            </button>
        <% end %>
    </div>
    <div id="app">
    <div v-if="loading">リロードしてください </div>
    <div v-else="loading">
      <div id="gantt-content" class="gantt-content">
        <div class="gantt-task">
          <div class="gantt-task-title">
            <% (1..10).each do |i| %>
              <% column_name = "clients_info#{i}_name" %>
                <% if @client_info_name[column_name].present? %>
                  <div class="task-item"><%= @client_info_name[column_name] %></div>
                <% end %>
            <% end %>
          </div>
        </div>
        <div id="gantt-calendar" class="gantt-calendar">
          <div id="gantt-day" class="gantt-day">
            <div v-for="(calendar,index) in calendars" :key="index">
              <div v-for="(day,index) in calendar.days" :key="index">
                <div class="day-blocks" :style="`width:${block_size}px;left:${day.block_number*block_size}px`">
                  <span>{{ day.day }}</span>
                  <span>{{ day.dayOfWeek }}</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    </div>
</div>

<script>
    const app = Vue.createApp({
      data(){
        return{
          loading:true,
          data:null,
          start_month:'',
          end_month:'',
          block_size:25,
          block_number:0,
          calendars:[],
        };
      },
      methods:{
        async fetchData() {
          try {
            const response = await fetch('https://jsonplaceholder.typicode.com/todos');
            const result = await response.json();
            
            this.data = result;
          } catch (error) {
            console.error('データの取得に失敗しました。ページをリロードしてください', error);
            this.reloadOnCatch();
          } finally {
            this.loading = false;
          }
        },
        reloadOnCatch() {
          window.location.reload();
        },
        getDays(year, month, block_number) {
          const dayOfWeek = ['日', '月', '火', '水', '木', '金', '土'];
          let days = [];
          let date = moment(`${year}-${month}-01`);
          let num = date.daysInMonth();
          for (let i = 0; i < num; i++) {
            days.push({
              day: date.date(),
              dayOfWeek: dayOfWeek[date.day()],
              block_number
            })
            date.add(1, 'day');
            block_number++;
          }
          return days;
        }, 
        getCalendar() {
          let block_number = 0;
          let days;
          let start_month = moment()
          let end_month = moment().add(12, 'months')
          let between_month = end_month.diff(start_month, 'months')
          for (let i = 0; i <= between_month; i++) {
            days = this.getDays(start_month.year(), start_month.format('MM'), block_number);
            this.calendars.push({
              date: start_month.format('YYYY/MM'),
              year: start_month.year(),
              month: start_month.month(), 
              start_block_number: block_number,
              calendar: days.length,
              days: days
            })
            start_month.add(1, 'months')
            block_number = days[days.length - 1].block_number
            block_number++;
          }
          return block_number;
        },    
      },
      mounted() {
        this.fetchData();
        this.getCalendar();
      }
    }).mount('#app')
</script>